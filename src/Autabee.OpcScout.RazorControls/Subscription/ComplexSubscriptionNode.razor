@using System.Text.Json;
@using Autabee.Communication.ManagedOpcClient.ManagedNode;
@using Autabee.Communication.ManagedOpcClient;
@using Opc.Ua;
@foreach (var item in Value)
{
    @if (item.Value is Dictionary<string, object> dicItem)
    {
        @if (dicItem.Count > 0)
        {
            <tr>
                @if (item.Key.StartsWith("["))
                {
                    <td style="padding-left:@(Depth)em">@($"{NodeId}{item.Key}")</td>
                }
                else
                {
                    <td style="padding-left:@(Depth)em">@($"{NodeId}.{item.Key}")</td>
                }
                <td colspan="5" />

            </tr>

            @if (item.Key.StartsWith("["))
            {
                <ComplexSubscriptionNode Value="@dicItem" NodeId=@($"{NodeId}{item.Key}") Depth="@(Depth +1)" />
            }
            else
            {
                <ComplexSubscriptionNode Value="@dicItem" NodeId=@($"{NodeId}.{item.Key}") Depth="@(Depth +1)" />
            }
        }
        else
        {
            <tr>
                @if (item.Key.StartsWith("["))
                {
                    <td style="padding-left:@(Depth*4)px">@($"{NodeId}{item.Key}")</td>
                }
                else
                {
                    <td style="padding-left:@(Depth*4)px">@($"{NodeId}.{item.Key}")</td>
                }

                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        }
    }
    else if (item.Value is ExtensionObject extension)
    {
        <ComplexSubscriptionNode Value="(Dictionary<string, object>)Client.FormatObject(extension, NodeId)" NodeId="@NodeId" Client="Client" Depth=@(Depth +1) />
    }
    else if (item.Value is ExtensionObject[] extensions)
    {
        @for (int i = 0; i < extensions.Length; i++)
        {
            <ComplexSubscriptionNode Value="(Dictionary<string, object>)Client.FormatObject(extensions[i], NodeId)" NodeId="@($"{NodeId}[{i}]")" Client="Client" Depth="@(Depth +1)" />
        }

    }
    else if (item.Value is NodeDataRecord<object> record)
    {
        <tr>
            <td style="padding-left:@(Depth)em">@(NodeIdName(NodeId, item.Key))</td>
            <td>@item.Key</td>
            <td></td>
            <td>@(record.Value)</td>
            <td>@(record.TypeName)</td>
            <td></td>
            <td></td>
        </tr>
    }
    else
    {
        <tr>
            <td style="padding-left:@(Depth)em">@(NodeIdName(NodeId, item.Key))</td>
            <td>@item.Key</td>
            <td></td>
            <td>@(item.Value)</td>
            <td>@(item.Value.GetType().FullName)</td>
            <td></td>

        </tr>
    }
}


@code {
    [Parameter]
    public AutabeeManagedOpcClient Client { get; set; }
    [Parameter]
    public Dictionary<string, object> Value { get; set; }
    [Parameter]
    public string NodeId { get; set; }
    [Parameter]
    public int Depth { get; set; }


    public string NodeIdName(string NodeId, string key)
    {
        if (key.StartsWith("["))
        {
            return $"{NodeId}{key}";
        }
        else
        {
            return $"{NodeId}.{key}";
        }
    }
}
